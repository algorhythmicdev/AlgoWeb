/* Shared form surface and control styling */
:root {
  --form-gap-default: clamp(1rem, 3vw, 1.4rem);
  --form-field-gap-default: 0.5rem;
  --form-field-radius-default: clamp(0.85rem, 2.2vw, 1.15rem);
  --form-field-padding-y-default: 0.85rem;
  --form-field-padding-x-default: 1rem;
  --form-focus-ring-color-default: var(--focus-ring-color, var(--voyage-blue));
  --form-focus-ring-shadow-default: 0 0 0 3px
    color-mix(in srgb, var(--form-focus-ring-color-default) 24%, transparent 76%);
  --form-field-border-default: color-mix(in srgb, var(--border) 82%, transparent 18%);
  --form-field-border-focus-default: color-mix(
    in srgb,
    var(--form-focus-ring-color-default) 60%,
    transparent 40%
  );
  --form-field-bg-default: color-mix(in srgb, var(--glass-bg-lightest) 64%, transparent 36%);
  --form-field-color-default: var(--text);
  --form-field-shadow-default: inset 0 1px 0 rgba(var(--snow-rgb, 255, 255, 255), 0.45);
  --form-placeholder-color-default: color-mix(in srgb, var(--text) 52%, transparent 48%);
  --form-error-border-default: color-mix(in srgb, var(--cherry-pop) 72%, transparent 28%);
  --form-error-shadow-default: 0 0 0 3px color-mix(in srgb, var(--cherry-pop) 22%, transparent 78%);
  --form-error-color-default: var(--cherry-pop);
  --form-note-color-default: var(--text-tertiary, color-mix(in srgb, var(--text) 64%, transparent 36%));
  --form-status-padding-default: 0.85rem 1rem;
  --form-status-radius-default: var(--form-field-radius, var(--form-field-radius-default));
  --form-status-bg-default: color-mix(in srgb, var(--glass-bg-lightest) 54%, transparent 46%);
  --form-status-color-default: color-mix(in srgb, var(--text) 72%, transparent 28%);
  --form-status-success-bg-default: color-mix(in srgb, var(--glass-bg-lightest) 60%, transparent 40%);
  --form-status-success-color-default: color-mix(in srgb, var(--accent-secondary) 64%, var(--text) 36%);
  --form-status-error-bg-default: color-mix(in srgb, var(--glass-bg-lightest) 58%, transparent 42%);
}

.form {
  display: grid;
  gap: var(--form-gap, var(--form-gap-default));
  width: 100%;
}

.form-field,
.form > label {
  display: grid;
  gap: var(--form-field-gap, var(--form-field-gap-default));
}

.form label,
.form-field label {
  font-weight: var(--form-label-weight, var(--weight-semibold, 600));
  font-size: var(--form-label-size, clamp(0.95rem, 0.95vw, 1.05rem));
  color: var(--form-label-color, color-mix(in srgb, var(--text) 86%, transparent 14%));
}

.form :where(input, select, textarea),
.form-field :where(input, select, textarea) {
  width: 100%;
  font: inherit;
  padding-block: var(--form-field-padding-y, var(--form-field-padding-y-default));
  padding-inline: var(--form-field-padding-x, var(--form-field-padding-x-default));
  border-radius: var(--form-field-radius, var(--form-field-radius-default));
  border: 1px solid var(--form-field-border, var(--form-field-border-default));
  background: var(--form-field-bg, var(--form-field-bg-default));
  color: var(--form-field-color, var(--form-field-color-default));
  box-shadow: var(--form-field-shadow, var(--form-field-shadow-default));
  transition:
    background 180ms var(--ease-out, ease),
    border-color 180ms var(--ease-out, ease),
    box-shadow 180ms var(--ease-out, ease),
    transform 180ms var(--ease-out, ease);
  appearance: none;
}

.form :where(input, select, textarea)::placeholder,
.form-field :where(input, select, textarea)::placeholder {
  color: var(--form-placeholder-color, var(--form-placeholder-color-default));
}

.form select,
.form-field select {
  background-image:
    linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position:
    calc(100% - 1.4rem) calc(50% - 0.35rem),
    calc(100% - 1rem) calc(50% - 0.35rem);
  background-size: 8px 8px;
  background-repeat: no-repeat;
  padding-right: calc(var(--form-field-padding-x, var(--form-field-padding-x-default)) + 1.8rem);
}

.form textarea,
.form-field textarea {
  resize: vertical;
  min-height: var(--form-textarea-min-height, 160px);
}

.form :where(input, select, textarea):focus,
.form :where(input, select, textarea):focus-visible,
.form-field :where(input, select, textarea):focus,
.form-field :where(input, select, textarea):focus-visible {
  outline: none;
  border-color: var(
    --form-field-border-focus,
    color-mix(in srgb, var(--form-focus-ring-color, var(--form-focus-ring-color-default)) 60%, transparent 40%)
  );
  box-shadow:
    var(
      --form-focus-ring-shadow,
      0 0 0 3px color-mix(
        in srgb,
        var(--form-focus-ring-color, var(--form-focus-ring-color-default)) 24%,
        transparent 76%
      )
    ),
    var(--form-field-shadow, var(--form-field-shadow-default));
}

.form :where(input, select, textarea)[aria-invalid='true'],
.form-field :where(input, select, textarea)[aria-invalid='true'] {
  border-color: var(--form-error-border, var(--form-error-border-default));
  box-shadow: var(--form-error-shadow, var(--form-error-shadow-default));
}

.form :where(input, select, textarea):disabled,
.form-field :where(input, select, textarea):disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.field-error {
  font-size: var(--form-feedback-size, var(--text-small));
  color: var(--form-error-color, var(--form-error-color-default));
  margin: 0;
}

.form-note {
  font-size: var(--form-note-size, var(--text-small));
  color: var(--form-note-color, var(--form-note-color-default));
  margin: 0;
}

.form-actions {
  display: flex;
  flex-direction: column;
  gap: var(--form-actions-gap, 0.75rem);
  align-items: flex-start;
}

.form-actions[data-layout='inline'] {
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--form-actions-inline-gap, 1rem);
}

.form-status {
  margin: 0;
  padding: var(--form-status-padding, var(--form-status-padding-default));
  border-radius: var(--form-status-radius, var(--form-status-radius-default));
  background: var(--form-status-bg, var(--form-status-bg-default));
  color: var(--form-status-color, var(--form-status-color-default));
  font-size: var(--form-status-size, var(--text-small));
  font-weight: var(--form-status-weight, var(--weight-semibold, 600));
}

.form-status--success {
  background: var(--form-status-success-bg, var(--form-status-success-bg-default));
  color: var(--form-status-success-color, var(--form-status-success-color-default));
}

.form-status--error {
  background: var(--form-status-error-bg, var(--form-status-error-bg-default));
  color: var(--form-status-error-color, var(--form-error-color-default));
}

@media (prefers-reduced-motion: reduce) {
  .form :where(input, select, textarea),
  .form-field :where(input, select, textarea) {
    transition: none;
  }
}

html[data-theme='hc'] .form :where(input, select, textarea),
html[data-theme='hc'] .form-field :where(input, select, textarea) {
  background: var(--bg);
  border-color: currentColor;
  box-shadow: none;
}

html[data-theme='hc'] .form :where(input, select, textarea):focus-visible,
html[data-theme='hc'] .form-field :where(input, select, textarea):focus-visible {
  outline: 3px solid currentColor;
  outline-offset: 3px;
  box-shadow: none;
}

html[data-theme='hc'] .form-status,
html[data-theme='hc'] .form-status--success,
html[data-theme='hc'] .form-status--error {
  background: transparent;
  border: 2px solid currentColor;
  color: currentColor;
}

html[data-theme='hc'] .field-error {
  color: currentColor;
}
