import { readdir, writeFile, stat } from 'node:fs/promises';
import { join, parse, posix } from 'node:path';

const ROOT = process.cwd();
const exists = (p) => stat(p).then(() => true).catch(() => false);

async function listBases(dir, exts) {
  const out = new Set();
  if (!(await exists(dir))) return [];
  for (const name of await readdir(dir)) {
    const p = join(dir, name);
    const st = await stat(p);
    if (st.isFile()) {
      const { name: base, ext } = parse(name);
      const lo = ext.toLowerCase();
      if (exts.includes(lo)) {
        const rel = posix.join('/', dir.split('static/')[1] || '');
        out.add(posix.join(rel, base));
      }
    }
  }
  return Array.from(out).sort();
}

async function guessVideo(bases, needle) {
  const n = needle.toLowerCase();
  const hit = bases.find(b => b.toLowerCase().includes(n));
  return hit || null;
}

const partners = await listBases('static/images/partners', ['.png','.webp','.jpg','.jpeg']);
const ideonautix = await listBases('static/images/ideonautix', ['.png','.webp','.jpg','.jpeg']);
const nodevoyage = await listBases('static/images/nodevoyage', ['.png','.webp','.jpg','.jpeg']);
const videoBases = await listBases('static/videos', ['.webm']);

const videoAlgorhythmics = await guessVideo(videoBases, 'algo') || await guessVideo(videoBases, 'algorhythmics');
const videoIdeonautix   = await guessVideo(videoBases, 'ideonautix') || await guessVideo(videoBases, 'ix');
const videoNodeVoyage   = await guessVideo(videoBases, 'nodevoyage') || await guessVideo(videoBases, 'nodi') || await guessVideo(videoBases, 'nv');

const file = `// AUTO-GENERATED by scripts/generate-present-assets.mjs
// Lists known static assets as extensionless bases for <AssetImage/> and <VideoPlayer/>

export const partners = ${JSON.stringify(partners, null, 2)};
export const ideonautixPreviews = ${JSON.stringify(ideonautix, null, 2)};
export const nodevoyagePreviews = ${JSON.stringify(nodevoyage, null, 2)};

export const videoAlgorhythmics = ${JSON.stringify(videoAlgorhythmics)};
export const videoIdeonautix   = ${JSON.stringify(videoIdeonautix)};
export const videoNodeVoyage   = ${JSON.stringify(videoNodeVoyage)};
`;

await writeFile('src/lib/presentAssets.ts', file, 'utf8');
console.log('Wrote src/lib/presentAssets.ts');
